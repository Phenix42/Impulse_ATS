{"ast":null,"code":"var _jsxFileName = \"/Users/hussain/Desktop/ScanMacha-ATS/FrontEnd/src/components/ScanScreen.js\",\n  _s = $RefreshSig$();\n// src/components/ScanScreen.js\nimport React, { useState, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { useNavigate } from 'react-router-dom';\nimport { ProgressBar } from 'react-bootstrap';\nimport './ResumeUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScanScreen = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [title, setTitle] = useState('Loading...');\n  const [jobDescription, setJobDescription] = useState('');\n  const navigate = useNavigate();\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: '.pdf,.doc,.docx',\n    onDrop: acceptedFiles => {\n      setLoading(true);\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n\n      // Simulate loading progress\n      setProgress(0); // Reset progress to 0\n      let progressInterval = setInterval(() => {\n        setProgress(prevProgress => {\n          if (prevProgress >= 100) {\n            clearInterval(progressInterval);\n            setLoading(false);\n            setTitle('Loading...');\n            return 100;\n          }\n          return prevProgress + 2; // Increase the progress by 2% every 50ms\n        });\n      }, 50); // Set interval to 50ms\n\n      setTimeout(() => {\n        setTitle('Analyzing...');\n      }, 3000); // Change title after 3 seconds\n    }\n  });\n  const getFileIcon = fileName => {\n    const extension = fileName.split('.').pop();\n    switch (extension) {\n      case 'pdf':\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-file-pdf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }, this);\n      case 'doc':\n      case 'docx':\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-file-word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const thumbs = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thumb\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thumb-inner\",\n      children: [getFileIcon(file.name), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, file.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this));\n  const handleJobDescriptionChange = e => {\n    setJobDescription(e.target.value);\n  };\n  const handleScan = () => {\n    setLoading(true);\n    setTimeout(() => {\n      navigate('/dashboard');\n    }, 5000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        ...getRootProps({\n          className: 'dropzone'\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag 'n' drop your resume here, or click to select files\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          now: progress,\n          label: `${progress}%`,\n          animated: true,\n          striped: true,\n          variant: \"info\",\n          className: \"mt-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"thumbs-container\",\n        children: thumbs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: jobDescription,\n      onChange: handleJobDescriptionChange,\n      placeholder: \"Enter job description here\",\n      rows: \"10\",\n      cols: \"50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), !loading && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"scan-button\",\n      onClick: handleScan,\n      children: \"Scan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(ScanScreen, \"iSkoe4U35B+vVrWDRkJ2c/UDwF8=\", false, function () {\n  return [useNavigate, useDropzone];\n});\n_c = ScanScreen;\nexport default ScanScreen;\nvar _c;\n$RefreshReg$(_c, \"ScanScreen\");","map":{"version":3,"names":["React","useState","useEffect","useDropzone","useNavigate","ProgressBar","jsxDEV","_jsxDEV","ScanScreen","_s","files","setFiles","loading","setLoading","progress","setProgress","title","setTitle","jobDescription","setJobDescription","navigate","getRootProps","getInputProps","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","progressInterval","setInterval","prevProgress","clearInterval","setTimeout","getFileIcon","fileName","extension","split","pop","className","_jsxFileName","lineNumber","columnNumber","thumbs","children","name","handleJobDescriptionChange","e","target","value","handleScan","now","label","animated","striped","variant","onChange","placeholder","rows","cols","onClick","_c","$RefreshReg$"],"sources":["/Users/hussain/Desktop/ScanMacha-ATS/FrontEnd/src/components/ScanScreen.js"],"sourcesContent":["// src/components/ScanScreen.js\nimport React, { useState, useEffect } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { useNavigate } from 'react-router-dom';\nimport { ProgressBar } from 'react-bootstrap';\nimport './ResumeUpload.css';\n\nconst ScanScreen = () => {\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [title, setTitle] = useState('Loading...');\n  const [jobDescription, setJobDescription] = useState('');\n  const navigate = useNavigate();\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: '.pdf,.doc,.docx',\n    onDrop: acceptedFiles => {\n      setLoading(true);\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n      \n      // Simulate loading progress\n      setProgress(0); // Reset progress to 0\n      let progressInterval = setInterval(() => {\n        setProgress(prevProgress => {\n          if (prevProgress >= 100) {\n            clearInterval(progressInterval);\n            setLoading(false);\n            setTitle('Loading...');\n            return 100;\n          }\n          return prevProgress + 2; // Increase the progress by 2% every 50ms\n        });\n      }, 50); // Set interval to 50ms\n\n      setTimeout(() => {\n        setTitle('Analyzing...');\n      }, 3000); // Change title after 3 seconds\n    }\n  });\n\n  const getFileIcon = (fileName) => {\n    const extension = fileName.split('.').pop();\n    switch (extension) {\n      case 'pdf':\n        return <i className=\"fas fa-file-pdf\"></i>;\n      case 'doc':\n      case 'docx':\n        return <i className=\"fas fa-file-word\"></i>;\n      default:\n        return <i className=\"fas fa-file\"></i>;\n    }\n  };\n\n  const thumbs = files.map(file => (\n    <div key={file.name} className=\"thumb\">\n      <div className=\"thumb-inner\">\n        {getFileIcon(file.name)}\n        <p>{file.name}</p>\n      </div>\n    </div>\n  ));\n\n  const handleJobDescriptionChange = (e) => {\n    setJobDescription(e.target.value);\n  };\n\n  const handleScan = () => {\n    setLoading(true);\n    setTimeout(() => {\n      navigate('/dashboard');\n    }, 5000); \n  };\n\n  return (\n    <div>\n      <section className=\"container\">\n        <div {...getRootProps({ className: 'dropzone' })}>\n          <input {...getInputProps()} />\n          <p>Drag 'n' drop your resume here, or click to select files</p>\n        </div>\n        {loading && <div className=\"progress-section\">\n          <h2>{title}</h2>\n          <ProgressBar now={progress} label={`${progress}%`} animated striped variant=\"info\" className=\"mt-3\" />\n        </div>}\n        <aside className=\"thumbs-container\">\n          {thumbs}\n        </aside>\n      </section>\n      <textarea\n        value={jobDescription}\n        onChange={handleJobDescriptionChange}\n        placeholder=\"Enter job description here\"\n        rows=\"10\"\n        cols=\"50\"\n      />\n      {!loading && <button className=\"scan-button\" onClick={handleScan}>Scan</button>}\n    </div>\n  );\n}\n\nexport default ScanScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}