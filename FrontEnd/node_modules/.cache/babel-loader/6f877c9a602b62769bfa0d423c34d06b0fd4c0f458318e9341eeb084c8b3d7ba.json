{"ast":null,"code":"var _jsxFileName = \"/Users/hussain/Desktop/ATS-JOBScanner/src/components/ResumeUpload.js\",\n  _s = $RefreshSig$();\n// src/components/ResumeUpload.js\nimport React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { ProgressBar } from 'react-bootstrap';\nimport './ResumeUpload.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ResumeUpload = () => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [loadingText, setLoadingText] = useState('Loading...');\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: '.pdf,.doc,.docx',\n    onDrop: acceptedFiles => {\n      setLoading(true);\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n\n      // Simulate loading progress\n      setProgress(0);\n      let progressInterval = setInterval(() => {\n        setProgress(prevProgress => {\n          if (prevProgress >= 100) {\n            clearInterval(progressInterval);\n            setLoading(false);\n            setLoadingText('Analyzing...');\n            return 100;\n          }\n          return prevProgress + 1;\n        });\n      }, 100); // Increase progress by 1% every 100ms\n\n      // Change loading text after 1 second\n      setTimeout(() => {\n        if (loading) {\n          setLoadingText('Analyzing...');\n        }\n      }, 1000);\n    }\n  });\n  const getFileIcon = fileName => {\n    const extension = fileName.split('.').pop();\n    switch (extension) {\n      case 'pdf':\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-file-pdf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }, this);\n      case 'doc':\n      case 'docx':\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-file-word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const thumbs = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thumb\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thumb-inner\",\n      children: [getFileIcon(file.name), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, file.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps({\n        className: 'dropzone'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop your resume here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n        now: progress,\n        label: `${progress}%`,\n        animated: true,\n        striped: true,\n        variant: \"info\",\n        className: \"mt-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-text\",\n        children: loadingText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"thumbs-container\",\n      children: thumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(ResumeUpload, \"QP9v9h2ZmPsf0s9PdJbq0G+HgV8=\", false, function () {\n  return [useDropzone];\n});\n_c = ResumeUpload;\nexport default ResumeUpload;\nvar _c;\n$RefreshReg$(_c, \"ResumeUpload\");","map":{"version":3,"names":["React","useState","useDropzone","ProgressBar","jsxDEV","_jsxDEV","Fragment","_Fragment","ResumeUpload","_s","files","setFiles","loading","setLoading","progress","setProgress","loadingText","setLoadingText","getRootProps","getInputProps","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","progressInterval","setInterval","prevProgress","clearInterval","setTimeout","getFileIcon","fileName","extension","split","pop","className","_jsxFileName","lineNumber","columnNumber","thumbs","children","name","now","label","animated","striped","variant","_c","$RefreshReg$"],"sources":["/Users/hussain/Desktop/ATS-JOBScanner/src/components/ResumeUpload.js"],"sourcesContent":["// src/components/ResumeUpload.js\nimport React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { ProgressBar } from 'react-bootstrap';\nimport './ResumeUpload.css';\n\nconst ResumeUpload = () => {\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [loadingText, setLoadingText] = useState('Loading...');\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: '.pdf,.doc,.docx',\n    onDrop: acceptedFiles => {\n      setLoading(true);\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n      \n      // Simulate loading progress\n      setProgress(0);\n      let progressInterval = setInterval(() => {\n        setProgress(prevProgress => {\n          if (prevProgress >= 100) {\n            clearInterval(progressInterval);\n            setLoading(false);\n            setLoadingText('Analyzing...');\n            return 100;\n          }\n          return prevProgress + 1;\n        });\n      }, 100); // Increase progress by 1% every 100ms\n\n      // Change loading text after 1 second\n      setTimeout(() => {\n        if (loading) {\n          setLoadingText('Analyzing...');\n        }\n      }, 1000);\n    }\n  });\n\n  const getFileIcon = (fileName) => {\n    const extension = fileName.split('.').pop();\n    switch (extension) {\n      case 'pdf':\n        return <i className=\"fas fa-file-pdf\"></i>;\n      case 'doc':\n      case 'docx':\n        return <i className=\"fas fa-file-word\"></i>;\n      default:\n        return <i className=\"fas fa-file\"></i>;\n    }\n  };\n\n  const thumbs = files.map(file => (\n    <div key={file.name} className=\"thumb\">\n      <div className=\"thumb-inner\">\n        {getFileIcon(file.name)}\n        <p>{file.name}</p>\n      </div>\n    </div>\n  ));\n\n  return (\n    <section className=\"container\">\n      <div {...getRootProps({ className: 'dropzone' })}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop your resume here, or click to select files</p>\n      </div>\n      {loading && (\n        <>\n          <ProgressBar now={progress} label={`${progress}%`} animated striped variant=\"info\" className=\"mt-3\" />\n          <div className=\"loading-text\">{loadingText}</div>\n        </>\n      )}\n      <aside className=\"thumbs-container\">\n        {thumbs}\n      </aside>\n    </section>\n  );\n}\n\nexport default ResumeUpload;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,YAAY,CAAC;EAE5D,MAAM;IAAEiB,YAAY;IAAEC;EAAc,CAAC,GAAGjB,WAAW,CAAC;IAClDkB,MAAM,EAAE,iBAAiB;IACzBC,MAAM,EAAEC,aAAa,IAAI;MACvBT,UAAU,CAAC,IAAI,CAAC;MAChBF,QAAQ,CAACW,aAAa,CAACC,GAAG,CAACC,IAAI,IAAIC,MAAM,CAACC,MAAM,CAACF,IAAI,EAAE;QACrDG,OAAO,EAAEC,GAAG,CAACC,eAAe,CAACL,IAAI;MACnC,CAAC,CAAC,CAAC,CAAC;;MAEJ;MACAT,WAAW,CAAC,CAAC,CAAC;MACd,IAAIe,gBAAgB,GAAGC,WAAW,CAAC,MAAM;QACvChB,WAAW,CAACiB,YAAY,IAAI;UAC1B,IAAIA,YAAY,IAAI,GAAG,EAAE;YACvBC,aAAa,CAACH,gBAAgB,CAAC;YAC/BjB,UAAU,CAAC,KAAK,CAAC;YACjBI,cAAc,CAAC,cAAc,CAAC;YAC9B,OAAO,GAAG;UACZ;UACA,OAAOe,YAAY,GAAG,CAAC;QACzB,CAAC,CAAC;MACJ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;MAET;MACAE,UAAU,CAAC,MAAM;QACf,IAAItB,OAAO,EAAE;UACXK,cAAc,CAAC,cAAc,CAAC;QAChC;MACF,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC,CAAC;EAEF,MAAMkB,WAAW,GAAIC,QAAQ,IAAK;IAChC,MAAMC,SAAS,GAAGD,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;IAC3C,QAAQF,SAAS;MACf,KAAK,KAAK;QACR,oBAAOhC,OAAA;UAAGmC,SAAS,EAAC;QAAiB;UAAAJ,QAAA,EAAAK,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAC5C,KAAK,KAAK;MACV,KAAK,MAAM;QACT,oBAAOtC,OAAA;UAAGmC,SAAS,EAAC;QAAkB;UAAAJ,QAAA,EAAAK,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAC7C;QACE,oBAAOtC,OAAA;UAAGmC,SAAS,EAAC;QAAa;UAAAJ,QAAA,EAAAK,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;IAC1C;EACF,CAAC;EAED,MAAMC,MAAM,GAAGlC,KAAK,CAACa,GAAG,CAACC,IAAI,iBAC3BnB,OAAA;IAAqBmC,SAAS,EAAC,OAAO;IAAAK,QAAA,eACpCxC,OAAA;MAAKmC,SAAS,EAAC,aAAa;MAAAK,QAAA,GACzBV,WAAW,CAACX,IAAI,CAACsB,IAAI,CAAC,eACvBzC,OAAA;QAAAwC,QAAA,EAAIrB,IAAI,CAACsB;MAAI;QAAAV,QAAA,EAAAK,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAP,QAAA,EAAAK,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf;EAAC,GAJEnB,IAAI,CAACsB,IAAI;IAAAV,QAAA,EAAAK,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKd,CACN,CAAC;EAEF,oBACEtC,OAAA;IAASmC,SAAS,EAAC,WAAW;IAAAK,QAAA,gBAC5BxC,OAAA;MAAA,GAASa,YAAY,CAAC;QAAEsB,SAAS,EAAE;MAAW,CAAC,CAAC;MAAAK,QAAA,gBAC9CxC,OAAA;QAAA,GAAWc,aAAa,CAAC;MAAC;QAAAiB,QAAA,EAAAK,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9BtC,OAAA;QAAAwC,QAAA,EAAG;MAAwD;QAAAT,QAAA,EAAAK,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAP,QAAA,EAAAK,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,EACL/B,OAAO,iBACNP,OAAA,CAAAE,SAAA;MAAAsC,QAAA,gBACExC,OAAA,CAACF,WAAW;QAAC4C,GAAG,EAAEjC,QAAS;QAACkC,KAAK,EAAE,GAAGlC,QAAQ,GAAI;QAACmC,QAAQ;QAACC,OAAO;QAACC,OAAO,EAAC,MAAM;QAACX,SAAS,EAAC;MAAM;QAAAJ,QAAA,EAAAK,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtGtC,OAAA;QAAKmC,SAAS,EAAC,cAAc;QAAAK,QAAA,EAAE7B;MAAW;QAAAoB,QAAA,EAAAK,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA,eACjD,CACH,eACDtC,OAAA;MAAOmC,SAAS,EAAC,kBAAkB;MAAAK,QAAA,EAChCD;IAAM;MAAAR,QAAA,EAAAK,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAP,QAAA,EAAAK,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAlC,EAAA,CA5EKD,YAAY;EAAA,QAMwBN,WAAW;AAAA;AAAAkD,EAAA,GAN/C5C,YAAY;AA8ElB,eAAeA,YAAY;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}