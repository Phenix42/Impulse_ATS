{"ast":null,"code":"var _jsxFileName = \"/Users/hussain/Desktop/ScanMacha-ATS/FrontEnd/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const matchPercentage = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.matchPercentage) || 0; // Default to 0 if no matchPercentage\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Score\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), matchPercentage !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"circular-chart\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n          value: matchPercentage,\n          text: `${matchPercentage}%`,\n          styles: buildStyles({\n            textColor: '#f88',\n            pathColor: '#4caf50',\n            trailColor: '#d6d6d6'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comparison result available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useLocation","CircularProgressbar","buildStyles","jsxDEV","_jsxDEV","Dashboard","_s","_location$state","location","matchPercentage","state","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","text","styles","textColor","pathColor","trailColor","_c","$RefreshReg$"],"sources":["/Users/hussain/Desktop/ScanMacha-ATS/FrontEnd/src/components/Dashboard.js"],"sourcesContent":["import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport './Dashboard.css';\n\nconst Dashboard = () => {\n  const location = useLocation();\n  const matchPercentage = location.state?.matchPercentage || 0; // Default to 0 if no matchPercentage\n\n  return (\n    <div className=\"dashboard-container\">\n      <aside className=\"sidebar\">\n        <h2>Score</h2>\n        {matchPercentage !== 0 ?  (\n        <div className=\"circular-chart\">\n          <CircularProgressbar\n            value={matchPercentage}\n            text={`${matchPercentage}%`}\n            styles={buildStyles({\n              textColor: '#f88',\n              pathColor: '#4caf50',\n              trailColor: '#d6d6d6',\n            })}\n          />\n        </div>):(  <p>No comparison result available.</p>)}\n      </aside>\n\n      <main className=\"dashboard\">\n      </main>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,4BAA4B;AAC7E,OAAO,4CAA4C;AACnD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACtB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,eAAe,GAAG,EAAAF,eAAA,GAAAC,QAAQ,CAACE,KAAK,cAAAH,eAAA,uBAAdA,eAAA,CAAgBE,eAAe,KAAI,CAAC,CAAC,CAAC;;EAE9D,oBACEL,OAAA;IAAKO,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCR,OAAA;MAAOO,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACxBR,OAAA;QAAAQ,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACbP,eAAe,KAAK,CAAC,gBACtBL,OAAA;QAAKO,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC7BR,OAAA,CAACH,mBAAmB;UAClBgB,KAAK,EAAER,eAAgB;UACvBS,IAAI,EAAE,GAAGT,eAAe,GAAI;UAC5BU,MAAM,EAAEjB,WAAW,CAAC;YAClBkB,SAAS,EAAE,MAAM;YACjBC,SAAS,EAAE,SAAS;YACpBC,UAAU,EAAE;UACd,CAAC;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,gBAAKZ,OAAA;QAAAQ,QAAA,EAAG;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eAERZ,OAAA;MAAMO,SAAS,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACV,EAAA,CA1BID,SAAS;EAAA,QACIL,WAAW;AAAA;AAAAuB,EAAA,GADxBlB,SAAS;AA4Bf,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}