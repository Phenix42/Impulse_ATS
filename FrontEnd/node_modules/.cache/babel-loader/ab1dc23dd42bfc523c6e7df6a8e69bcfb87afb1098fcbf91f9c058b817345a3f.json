{"ast":null,"code":"var _jsxFileName = \"/Users/hussain/Desktop/ScanMacha-ATS/FrontEnd/src/components/ResumeUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport './ResumeUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResumeUpload = ({\n  setResumeFile\n}) => {\n  _s();\n  const [files, setFiles] = useState([]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: '.pdf,.doc,.docx',\n    onDrop: acceptedFiles => {\n      setResumeFile(acceptedFiles[0]);\n      setFiles(acceptedFiles);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps({\n        className: 'dropzone'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop your resume here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"thumbs-container\",\n      children: files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thumb\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thumb-inner\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: `fas ${file.name.endsWith('.pdf') ? 'fa-file-pdf' : 'fa-file-word'}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)\n      }, file.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(ResumeUpload, \"bD02hT2rlpHP3mPQRBsw7RYIxyE=\", false, function () {\n  return [useDropzone];\n});\n_c = ResumeUpload;\nexport default ResumeUpload;\nvar _c;\n$RefreshReg$(_c, \"ResumeUpload\");","map":{"version":3,"names":["React","useState","useDropzone","jsxDEV","_jsxDEV","ResumeUpload","setResumeFile","_s","files","setFiles","getRootProps","getInputProps","accept","onDrop","acceptedFiles","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","file","name","endsWith","_c","$RefreshReg$"],"sources":["/Users/hussain/Desktop/ScanMacha-ATS/FrontEnd/src/components/ResumeUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport './ResumeUpload.css';\n\nconst ResumeUpload = ({ setResumeFile }) => {\n  const [files, setFiles] = useState([]);\n  \n  const { getRootProps, getInputProps } = useDropzone({\n    accept: '.pdf,.doc,.docx',\n    onDrop: acceptedFiles => {\n      setResumeFile(acceptedFiles[0]);\n      setFiles(acceptedFiles);\n    }\n  });\n\n  return (\n    <section className=\"container\">\n      <div {...getRootProps({ className: 'dropzone' })}>\n        <input {...getInputProps()} />\n        <p>Drag 'n' drop your resume here, or click to select files</p>\n      </div>\n      <aside className=\"thumbs-container\">\n        {files.map(file => (\n          <div key={file.name} className=\"thumb\">\n            <div className=\"thumb-inner\">\n              <i className={`fas ${file.name.endsWith('.pdf') ? 'fa-file-pdf' : 'fa-file-word'}`}></i>\n              <p>{file.name}</p>\n            </div>\n          </div>\n        ))}\n      </aside>\n    </section>\n  );\n}\n\nexport default ResumeUpload;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM;IAAES,YAAY;IAAEC;EAAc,CAAC,GAAGT,WAAW,CAAC;IAClDU,MAAM,EAAE,iBAAiB;IACzBC,MAAM,EAAEC,aAAa,IAAI;MACvBR,aAAa,CAACQ,aAAa,CAAC,CAAC,CAAC,CAAC;MAC/BL,QAAQ,CAACK,aAAa,CAAC;IACzB;EACF,CAAC,CAAC;EAEF,oBACEV,OAAA;IAASW,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAC5BZ,OAAA;MAAA,GAASM,YAAY,CAAC;QAAEK,SAAS,EAAE;MAAW,CAAC,CAAC;MAAAC,QAAA,gBAC9CZ,OAAA;QAAA,GAAWO,aAAa,CAAC;MAAC;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9BhB,OAAA;QAAAY,QAAA,EAAG;MAAwD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,eACNhB,OAAA;MAAOW,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAChCR,KAAK,CAACa,GAAG,CAACC,IAAI,iBACblB,OAAA;QAAqBW,SAAS,EAAC,OAAO;QAAAC,QAAA,eACpCZ,OAAA;UAAKW,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BZ,OAAA;YAAGW,SAAS,EAAE,OAAOO,IAAI,CAACC,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC,GAAG,aAAa,GAAG,cAAc;UAAG;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxFhB,OAAA;YAAAY,QAAA,EAAIM,IAAI,CAACC;UAAI;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf;MAAC,GAJEE,IAAI,CAACC,IAAI;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKd,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAb,EAAA,CA7BKF,YAAY;EAAA,QAGwBH,WAAW;AAAA;AAAAuB,EAAA,GAH/CpB,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}